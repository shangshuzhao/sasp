Traceback (most recent call last):
  File "/home/shz19039/sasp/encode_sasp.py", line 79, in <module>
    main(alpha=args.alpha, seed=args.seed, device=device)
  File "/home/shz19039/sasp/encode_sasp.py", line 63, in main
    index = generate_index(tgae, sasp_data, protein_labels)
  File "/home/shz19039/sasp/encode_sasp.py", line 17, in generate_index
    sasp_index = tgae.predict(protein_data, proteins_label)
  File "/home/shz19039/sasp/TransformerAutoEncoder.py", line 84, in predict
    memory = self.encoder(x, var_label)                               # (B, P, d_model)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/shz19039/sasp/TransformerAutoEncoder.py", line 21, in forward
    name_emb = self.var_name_embedding(var_lab)             # (B, P, d_model)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/sparse.py", line 190, in forward
    return F.embedding(
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/functional.py", line 2551, in embedding
    return torch.embedding(weight, input, padding_idx, scale_grad_by_freq, sparse)
RuntimeError: Expected tensor for argument #1 'indices' to have one of the following scalar types: Long, Int; but got torch.cuda.FloatTensor instead (while checking arguments for embedding)
Traceback (most recent call last):
  File "/home/shz19039/sasp/encode_sasp.py", line 79, in <module>
    main(alpha=args.alpha, seed=args.seed, device=device)
  File "/home/shz19039/sasp/encode_sasp.py", line 63, in main
    index = generate_index(tgae, sasp_data, protein_labels)
  File "/home/shz19039/sasp/encode_sasp.py", line 17, in generate_index
    sasp_index = tgae.predict(protein_data, proteins_label)
  File "/home/shz19039/sasp/TransformerAutoEncoder.py", line 84, in predict
    memory = self.encoder(x, var_label)                               # (B, P, d_model)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/shz19039/sasp/TransformerAutoEncoder.py", line 21, in forward
    name_emb = self.var_name_embedding(var_lab)             # (B, P, d_model)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/sparse.py", line 190, in forward
    return F.embedding(
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/functional.py", line 2551, in embedding
    return torch.embedding(weight, input, padding_idx, scale_grad_by_freq, sparse)
RuntimeError: Expected tensor for argument #1 'indices' to have one of the following scalar types: Long, Int; but got torch.cuda.FloatTensor instead (while checking arguments for embedding)
Traceback (most recent call last):
  File "/home/shz19039/sasp/encode_sasp.py", line 79, in <module>
    main(alpha=args.alpha, seed=args.seed, device=device)
  File "/home/shz19039/sasp/encode_sasp.py", line 63, in main
    index = generate_index(tgae, sasp_data, protein_labels)
  File "/home/shz19039/sasp/encode_sasp.py", line 17, in generate_index
    sasp_index = tgae.predict(protein_data, proteins_label)
  File "/home/shz19039/sasp/TransformerAutoEncoder.py", line 84, in predict
    memory = self.encoder(x, var_label)                               # (B, P, d_model)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/shz19039/sasp/TransformerAutoEncoder.py", line 21, in forward
    name_emb = self.var_name_embedding(var_lab)             # (B, P, d_model)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/sparse.py", line 190, in forward
    return F.embedding(
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/functional.py", line 2551, in embedding
    return torch.embedding(weight, input, padding_idx, scale_grad_by_freq, sparse)
RuntimeError: Expected tensor for argument #1 'indices' to have one of the following scalar types: Long, Int; but got torch.cuda.FloatTensor instead (while checking arguments for embedding)
Traceback (most recent call last):
  File "/home/shz19039/sasp/encode_sasp.py", line 79, in <module>
    main(alpha=args.alpha, seed=args.seed, device=device)
  File "/home/shz19039/sasp/encode_sasp.py", line 63, in main
    index = generate_index(tgae, sasp_data, protein_labels)
  File "/home/shz19039/sasp/encode_sasp.py", line 17, in generate_index
    sasp_index = tgae.predict(protein_data, proteins_label)
  File "/home/shz19039/sasp/TransformerAutoEncoder.py", line 84, in predict
    memory = self.encoder(x, var_label)                               # (B, P, d_model)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/shz19039/sasp/TransformerAutoEncoder.py", line 21, in forward
    name_emb = self.var_name_embedding(var_lab)             # (B, P, d_model)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/modules/sparse.py", line 190, in forward
    return F.embedding(
  File "/home/shz19039/miniconda3/envs/climate/lib/python3.10/site-packages/torch/nn/functional.py", line 2551, in embedding
    return torch.embedding(weight, input, padding_idx, scale_grad_by_freq, sparse)
RuntimeError: Expected tensor for argument #1 'indices' to have one of the following scalar types: Long, Int; but got torch.cuda.FloatTensor instead (while checking arguments for embedding)
